/// Ultimate shorthand mixin for border properties.
///
/// @param {number | list} $widths - border width property/ properties
///
/// @param {string} $style - border style type
///
/// @param {color} $color - border color
///
/// @example
///
/// border(10px, solid, #BADa55)
/// //  border: 10px solid #BADa55;
///
/// border(10px 20px, dotted dashed, #444 #000)
///  // border-top: 10px dotted #444;
///  // border-bottom: 10px dotted #444;
///  // border-left: 20px dashed #000;
///  // border-right: 20px dashed #000;
///
/// @output Border `width`, `style` and `color` properties
///
/// @throw
///
/// Check border mixin arguments
///
/// Invalid list length for border mixin arguments
///

@mixin border($widths, $styles, $colors) {
	@if type-of($widths) == 'number' and
		type-of($styles) == 'string' and
		type-of($colors) == 'color' {
		border: $widths $styles $colors;
	} @else if (type-of($widths) == 'list' or 'number') and
		(type-of($styles) == 'list' or 'string') and
		(type-of($colors) == 'list' or 'color') {

		// Define border property placeholders
		$border-top: ();
		$border-right: ();
		$border-bottom: ();
		$border-left: ();

		// Measure length of each argument value and
		// append it to appropriate placeholder recursivly
		@each $property in ($widths, $styles, $colors) {
			@if length($property) == 1 {
				$border-top: append($border-top, $property);
				$border-right: append($border-right, $property);
				$border-bottom: append($border-bottom, $property);
				$border-left: append($border-left, $property);
			} @else if length($property) == 2 {
				$border-top: append($border-top, nth($property, 1));
				$border-right: append($border-right, nth($property, 2));
				$border-bottom: append($border-bottom, nth($property, 1));
				$border-left: append($border-left, nth($property, 2));
			} @else if length($property) == 3 {
				$border-top: append($border-top, nth($property, 1));
				$border-right: append($border-right, nth($property, 2));
				$border-bottom: append($border-bottom, nth($property, 3));
				$border-left: append($border-left, nth($property, 2));
			} @else if length($property) == 4 {
				$border-top: append($border-top, nth($property, 1));
				$border-right: append($border-right, nth($property, 2));
				$border-bottom: append($border-bottom, nth($property, 3));
				$border-left: append($border-left, nth($property, 4));
			} @else {
				@warn "Invalid list length for border mixin arguments";
			}
		}

		@each $border-property in ($border-top, $border-right, $border-bottom, $border-left) {
			@if nth($border-property, 1) == 0 {
				$border-property: nth($border-property, 1);
			}
		}

		// Output generated properties
		border-top: $border-top;
		border-right: $border-right;
		border-bottom: $border-bottom;
		border-left: $border-left;
	} @else {
		@warn 'Check border mixin arguments';
	}
}
